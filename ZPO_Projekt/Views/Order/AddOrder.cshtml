@model ZPO_Projekt.Models.OrderViewModel

@{
    ViewBag.Title = "AddOrder";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="center col-4">
    <div class="info-section">New order</div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @for (int i = 0; i < Model.Foods.Count(); i++)
    {
        <div class="checkbox">
            <label>
                @Html.HiddenFor(model => model.Foods[i].Id)
                @Html.CheckBoxFor(model => model.Foods[i].IsChecked)
                @Html.DisplayFor(model => model.Foods[i].Name)
                @Html.HiddenFor(model => model.Foods[i].Name)
                (@Html.DisplayFor(model => model.Foods[i].Type))
                @Html.HiddenFor(model => model.Foods[i].Type)
                @Html.DisplayFor(model => model.Foods[i].Price) zl
                @Html.HiddenFor(model => model.Foods[i].Price)
                @Model.Foods[i].GetDescription()
            </label>
        </div>
    }

    <div>
        @Html.ActionLink("Customized order? Add new dish to our menu!", "AddNewDish")
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Order.Delivery, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Order.Delivery, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Order.Delivery, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Order" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
