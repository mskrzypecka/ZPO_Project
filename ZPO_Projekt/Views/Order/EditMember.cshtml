@model ZPO_Projekt.Data.Entities.Food

@{
    ViewBag.Title = "EditOrder";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="center col-4">
    <div class="h3">Food</div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="info-section">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "" })
        <div id="editOrderName" class="info-container">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="info-section">
        @Html.LabelFor(model => model.DeliveryType, htmlAttributes: new { @class = "" })
        <div id="editOrderDeliveryType" class="info-container">
            @Html.EnumDropDownListFor(model => model.DeliveryType, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.DeliveryType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="info-section">
        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "" })
        <div id="editOrderBirth" class="info-container">
            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="info-section">
        @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "" })
        <div id="editOrderWeight" class="info-container">
            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="info-section">
        @Html.LabelFor(model => model.ImageLink, htmlAttributes: new { @class = "" })
        <div id="editOrderImageLink" class="info-container">
            @Html.EditorFor(model => model.ImageLink, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.ImageLink, "", new { @class = "text-danger" })
        </div>
    </div>
    <input id="editOrderSubmit" type="submit" value="Save" class="btn" />
</div>
}

<div class="center">
    @Html.ActionLink("Back to List", "Index", "Order", null, htmlAttributes: new { @class = "link-dark" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
